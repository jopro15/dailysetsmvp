{"version":3,"sources":["images/logo.png","images/Communityicon.png","getWeb3.js","Button.js","Main2.js","PPage.js","Dashboard.js","Main.js","NavBar.js","ConGroup.js","Home.js","About.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","STYLES","SIZES","MButton","children","onClick","type","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","Main2","props","change","setState","add","state","costs","title","content","cr","c","this","onSubmit","event","addg","n","placeholder","required","onChange","target","value","min","join","fee","Component","PPage","back","p","map","str2","idx2","currcons","pos","Dashboard","z","data","rcosts","isNaN","user","owner","usercount","addslot","Main","cpage","id","getcons","getdata","create","sc","for","name","page","goals","str","idx","b","fees","slots","currdata","NavBar","handleClick","clicked","funcs","cName","item","key","ConGroup","TransitionGroup","cont","CSSTransition","timeout","classNames","in","unmountOnExit","Home","pl","work","style","borderColor","color","fontSize","src","Logo","height","margin","LogoC","About","class","Footer","App","componentDidMount","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","DailyC","networks","instance","Contract","abi","address","contract","loading","getgoals","methods","curr","call","L","i","push","get_l","k","get_title","tmp","getcosts","get_c","getslots","get_left","getfees","get_fee","getcontent","get_content","get_owner","get_value","get_usercount","parseInt","get_rcosts","load","addplan","create_plan","send","from","on","hash","add_goal","price","get_f","add_userslot","laoding","join_plan","changeadd","currplan","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,o0rbCA3CD,EAAOC,QAAU,IAA0B,2C,0QCqC5BC,EAnCC,kBACd,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAC,EAAA,0DAE1BF,OAAOG,SAFmB,wBAGtBC,EAAO,IAAIC,IAAKL,OAAOG,UAHD,kBAMpBH,OAAOG,SAASG,SANI,OAQ1BR,EAAQM,GARkB,gDAU1BL,EAAO,EAAD,IAVoB,gCAcrBC,OAAOI,MAERA,EAAOJ,OAAOI,KACpBG,QAAQC,IAAI,2BACZV,EAAQM,KAIFK,EAAW,IAAIJ,IAAKK,UAAUC,aAClC,yBAEIP,EAAO,IAAIC,IAAKI,GACtBF,QAAQC,IAAI,gDACZV,EAAQM,IA3BoB,8DCD3BQ,G,MAAS,CACX,eACA,iBAGEC,EAAQ,CACb,cACA,aACA,cAKSC,EAAU,SAAC,GAMjB,IALHC,EAKE,EALFA,SAEAC,GAGE,EAJFC,KAIE,EAHFD,SACAE,EAEE,EAFFA,YACAC,EACE,EADFA,WAEMC,EAAmBR,EAAOS,SAASH,GAAeA,EAAcN,EAAO,GAEvEU,EAAkBT,EAAMQ,SAASF,GAAcA,EAAaN,EAAM,GAExE,OACI,4BAAQU,UAAS,cAASH,EAAT,YAA6BE,GAAkBN,QAASA,GACpED,IC0CES,E,YA7DZ,WAAYC,GAAO,IAAD,8BACf,4CAAMA,KALTC,OAAO,WACJ,EAAKC,SAAS,CAACC,KAAM,EAAKC,MAAMD,OAKhC,EAAKC,MAAM,CACRC,MAAO,EAEPC,MAAO,GACPC,QAAS,GACTJ,KAAK,GAPO,E,sEAWR,IAAD,OAEDK,EAAK,GAEHC,EAAI,kBAAC,EAAD,CAASf,WAAY,aAAaH,QAASmB,KAAKT,QAAhD,aAkCV,OAjCGS,KAAKN,MAAMD,MAEbK,EACC,0BAAMV,UAAU,QAAQa,SAAU,SAACC,GAAD,OAClC,EAAKZ,MAAMa,KAAK,EAAKb,MAAMc,EAAG,EAAKV,MAAME,MAAO,EAAKF,MAAMG,QAAS,EAAKH,MAAMC,SAE/E,2BACAb,KAAK,OACLuB,YAAY,QAEZC,UAAQ,EACRC,SAAU,SAACL,GACN,EAAKV,SAAS,CAACI,MAAOM,EAAMM,OAAOC,QACpCrC,QAAQC,IAAI,EAAKqB,MAAME,UAC3B,2BACAd,KAAK,OACLuB,YAAY,UACZC,UAAQ,EACRC,SAAU,SAACL,GAAD,OACN,EAAKV,SAAS,CAACK,QAASK,EAAMM,OAAOC,WACzC,2BACA3B,KAAK,SACLuB,YAAY,SACZK,IAAI,IACJJ,UAAQ,EACRC,SAAU,SAACL,GACN,EAAKV,SAAS,CAACG,MAAOO,EAAMM,OAAOC,QACpCrC,QAAQC,IAAI,EAAKqB,MAAMC,UAC1B,kBAAC,EAAD,CAASX,WAAY,aAAaF,KAAK,UAAvC,SAMA,6BACG,kBAAC,EAAD,CAASE,WAAY,aAAaH,QAAS,kBAAI,EAAKS,MAAMqB,KAAK,EAAKrB,MAAMc,EAAG,EAAKd,MAAMsB,OAAxF,YAAwGZ,KAAKV,MAAMsB,IAAnH,UACCb,EACAD,O,GA7DMe,aC0BLC,E,iLAxBN,IAAD,OACR,OACK,6BAEG,yBAAK1B,UAAU,MAAMP,QAAST,QAAQC,IAAI,MAC1C,kBAAC,EAAD,CAASW,WAAY,aAAaH,QAASmB,KAAKV,MAAMyB,MAAtD,QACKf,KAAKV,MAAM0B,EAAEC,KAAI,SAACC,EAAKC,GAAN,OAClB,yBAAK/B,UAAU,QACf,4BAAK8B,GACJ,2BAAI,EAAK5B,MAAM8B,SAASD,QAEzB,kBAAC,EAAD,CAAOhB,KAAMH,KAAKV,MAAMa,KAAMC,EAAGJ,KAAKV,MAAM+B,IAAKT,IAAKZ,KAAKV,MAAMsB,IAAKD,KAAMX,KAAKV,MAAMqB,OAEvF,2BAAIX,KAAKV,MAAMK,a,GAdPkB,aCoBLS,E,iLAlBF,IAAD,OACAC,EAAIvB,KAAKV,MAAMK,MAAQK,KAAKV,MAAMkC,KAAKC,OAASzB,KAAKV,MAAMkC,KAAKf,MAKpE,OAJGiB,MAAMH,IAAMA,EAAI,KACfA,EAAI,GAIJ,yBAAKnC,UAAS,cAASY,KAAKV,MAAMqC,MAAQ3B,KAAKV,MAAMkC,KAAKI,MAAQ,SAAS,KAC3E,qCAAU,uBAAGxC,UAAU,SAASY,KAAKV,MAAMkC,KAAKf,MAAtC,SACV,2CAAgB,uBAAGrB,UAAU,SAASY,KAAKV,MAAMkC,KAAKf,MAAQT,KAAKV,MAAMkC,KAAKC,SAC9E,wCAAa,uBAAGrC,UAAU,SAASY,KAAKV,MAAMkC,KAAKK,YACnD,qCAAU,uBAAGzC,UAAU,SAASY,KAAKV,MAAMkC,KAAKI,QAC/C5B,KAAKV,MAAMqC,MAAQ3B,KAAKV,MAAMkC,KAAKI,MAAQ,kBAAC,EAAD,CAAS/C,QAAS,kBAAI,EAAKS,MAAMwC,QAAQ,EAAKxC,MAAMc,EAAE,EAAGmB,KAAzD,qBAAiFA,EAAjF,QAAmG,kBAAC,EAAD,sD,GAdnIV,aCsFTkB,E,YA1EX,WAAYzC,GAAO,IAAD,8BACd,4CAAMA,KARV0C,MAAM,SAACC,IACQ,IAARA,IACH,EAAK3C,MAAM4C,QAAQD,EAAG,GACtB,EAAK3C,MAAM6C,QAAQF,EAAG,IACtB,EAAKzC,SAAS,CAACwC,MAAOC,IACtB7D,QAAQC,IAAI,EAAKqB,MAAMsC,QAIvB,EAAKtC,MAAM,CACPsC,OAAQ,EACRpB,IAAK,GAJK,E,sEAQT,IAAD,OAEAwB,EAAS,GACVpC,KAAKV,MAAM+C,KACdD,EAEA,0BAAMhD,UAAW,OAAOa,SAAU,SAACC,GAC/B,EAAKZ,MAAM8C,OAAO,EAAK1C,MAAMkB,OAE5B,2BAAO0B,IAAI,eAAelD,UAAU,aAChC,0BAAMA,UAAU,kBAAhB,SAEL,2BACAN,KAAK,SACLyD,KAAK,eACL7B,IAAK,IACLJ,UAAQ,EACRD,YAAY,GACZE,SAAU,SAACL,GAAD,OACV,EAAKV,SAAS,CAACoB,IAAKV,EAAMM,OAAOC,WAEhC,kBAAC,EAAD,CAASrB,UAAU,OAAOJ,WAAY,aAAaF,KAAK,UAAxD,YAIJ,IAAI0D,EAAO,GA8BhB,OA5BSA,GADqB,IAAtBxC,KAAKN,MAAMsC,MAEfhC,KAAKV,MAAMmD,MAAMxB,KAAI,SAACyB,EAAKC,GAAN,OAErB,6BACCA,EAAM,EAAKrD,MAAMsD,EAClB,yBAAKxD,UAAU,OACd,kBAAC,EAAD,CAASJ,WAAY,aAAaH,QAAS,kBAAI,EAAKmD,MAAMW,KAA1D,QACID,EAAIzB,KAAI,SAACC,EAAKC,GAAN,OAAa,4BAAKD,MAC3B,kBAAC,EAAD,CAAOf,KAAM,EAAKb,MAAMa,KAAMC,EAAGuC,EAAI,EAAG/B,IAAK,EAAKtB,MAAMuD,KAAKF,GAAMhC,KAAM,EAAKrB,MAAMqB,OAEpF,2BAAI,EAAKrB,MAAMK,MAAMgD,IAErB,2BAAI,EAAKrD,MAAMwD,MAAMH,GAAO,EAAxB,uBAA4C,EAAKrD,MAAMwD,MAAMH,GAA7D,mBAAiF,uCAArF,MAEI,OAMH,6BACA,kBAAC,EAAD,CAAO5B,KAAM,kBAAI,EAAKiB,OAAO,IAAIhB,EAAGhB,KAAKV,MAAMmD,MAAMzC,KAAKN,MAAMsC,OAAQZ,SAAUpB,KAAKV,MAAM8B,SAAUC,IAAKrB,KAAKN,MAAMsC,MAAM,EAAGrC,MAAOK,KAAKV,MAAMK,MAAMK,KAAKN,MAAMsC,OACnKrB,KAAMX,KAAKV,MAAMqB,KAAMR,KAAMH,KAAKV,MAAMa,KAAMS,IAAOZ,KAAKV,MAAMuD,KAAK7C,KAAKN,MAAMsC,SAChF,kBAAC,EAAD,CAAW5B,EAAGJ,KAAKN,MAAMsC,MAAOF,QAAS9B,KAAKV,MAAMwC,QAASH,KAAM3B,KAAKV,MAAMqC,KAAMH,KAAMxB,KAAKV,MAAMyD,SAAUpD,MAAOK,KAAKV,MAAMK,MAAMK,KAAKN,MAAMsC,UAM3J,6BACI,qCACCI,EAEAI,O,GA9EU3B,aCgDJmC,E,YA7Cb,WAAY1D,GAAO,IAAD,8BAChB,4CAAMA,KAJR2D,YAAY,WACV,EAAKzD,SAAS,CAAC0D,SAAU,EAAKxD,MAAMwD,WAIpC,EAAKxD,MAAM,CACTwD,SAAS,GAHK,E,sEAMX,IAAD,OAsBR,OACE,yBAAK9D,UAAU,eACb,wBAAIA,UAAU,cAAcP,QAASmB,KAAKV,MAAM6D,MAAM,IAAtD,eACA,yBAAK/D,UAAU,YAAYP,QAASmB,KAAKiD,aACvC,uBAAG7D,UAAWY,KAAKN,MAAMwD,QAAU,eAAiB,iBAEtD,wBAAI9D,UAAWY,KAAKN,MAAMwD,QAAU,kBAAmB,YA3BvC,CAChB,CACEtD,MAAO,QACPqC,GAAI,EACJmB,MAAO,aAGT,CACExD,MAAO,SACPqC,GAAI,EACJmB,MAAO,aAGT,CACExD,MAAO,SACPqC,GAAI,EACJmB,MAAO,cAYInC,KAAI,SAACoC,EAAMV,GAAP,OACf,wBAAIW,IAAKX,GAAK,uBAAGvD,UAAWiE,EAAKD,MAAOvE,QAAS,EAAKS,MAAM6D,MAAME,EAAKpB,GAAG,IAAKoB,EAAKzD,iB,GAzCrEiB,a,kDCuBN0C,E,iLArBP,IAAIhC,EAAI,GAOZ,OAFQA,EAJAvB,KAAKV,MAAM2C,GAIP,EAAC,GAAO,GAHR,EAAC,GAAM,GAMf,kBAACuB,EAAA,EAAD,KACKxD,KAAKV,MAAMmE,KAAKxC,KAAI,SAACpB,EAASoC,GAAV,OACrB,6BAEA,kBAACyB,EAAA,EAAD,CAAeJ,IAAKrB,EAAI0B,QAAS,IAAKC,WAAW,aAAaC,GAAItC,EAAEU,GAAK6B,eAAe,GACrFjE,Y,GAhBQgB,aCyHRkD,E,YA/GX,WAAYzE,GAAO,IAAD,8BAChB,4CAAMA,KALR0E,GAAG,WACC,EAAKxE,SAAS,CAACyC,IAAK,EAAKvC,MAAMuC,MAKjC,EAAKvC,MAAM,CAERuC,IAAI,GAJS,E,sEAUd,IAAMgC,EACP,CAEK,yBAAK7E,UAAU,MAAM8E,MAAO,CAACC,YAAa,UAC1C,wBAAI/E,UAAU,YAAd,oBAGA,uBAAGA,UAAU,YAAb,oLAIA,wBAAIA,UAAU,YAAd,gBAGA,uBAAGA,UAAU,YAAb,oTAKA,wBAAIA,UAAU,YAAd,yBAGA,uBAAGA,UAAU,YAAb,qRAIA,wBAAIA,UAAU,YAAd,qBAGA,uBAAGA,UAAU,YAAb,8LAOA,yBAAKA,UAAU,MAAM8E,MAAO,CAACC,YAAa,QAE1C,wBAAI/E,UAAU,YAAd,qBAGA,uBAAGA,UAAU,YAAb,2NAIA,wBAAIA,UAAU,YAAd,qBAGA,uBAAGA,UAAU,YAAb,kMAIA,wBAAIA,UAAU,YAAd,8BAGA,uBAAGA,UAAU,YAAb,wWASJ,OACI,6BACA,wBAAIA,UAAU,cAAc8E,MAAO,CAACE,MAAM,QAASC,SAAS,UAA5D,gBACA,yBAAKC,IAAKC,IAAML,MAAO,CAACM,OAAQ,UAChC,wBAAIpF,UAAU,eAAd,uBACA,uBAAGA,UAAU,YAAb,2OAIA,wBAAIA,UAAU,eAAd,mCACA,uBAAGA,UAAU,YAAb,qQAIA,wBAAIA,UAAU,eAAd,uCACA,uBAAGA,UAAU,YAAb,4VAIA,wBAAIA,UAAU,eAAd,wBAEA,kBAAC,EAAD,CAAU8E,MAAO,CAACE,MAAO,MAAOK,OAAQ,QAAS5F,QAASmB,KAAKgE,IAAKhE,KAAKN,MAAMuC,GAAK,iBAAmB,YAGxG,kBAAC,EAAD,CAAUwB,KAAMQ,EAAMhC,GAAIjC,KAAKN,MAAMuC,KAEpC,wBAAI7C,UAAU,eAAd,mBACA,yBAAKkF,IAAKI,IAAOR,MAAO,CAACM,OAAQ,UACjC,uBAAGpF,UAAU,YAAb,2O,GA7GOyB,aCUJ8D,E,iLAVP,OACE,yBAAKC,MAAM,aACR,yBAAKA,MAAM,UAAX,SACA,yBAAKA,MAAM,UAAX,WACA,yBAAKA,MAAM,UAAX,gB,GAPO/D,aCYLgE,E,iLAXP,OACE,yBAAKzF,UAAU,aACb,yBAAKA,UAAU,YACb,uDAA4B,oCAC5B,wCAAa,0C,GANNyB,aCmPNiE,G,kBArDb,WAAYxF,GAAO,IAAD,8BAChB,4CAAMA,KAnLRyF,kBAkLkB,sBAlLE,oCAAAhH,EAAA,sEAGGN,IAHH,cAGVQ,EAHU,gBAMOA,EAAK+G,IAAIC,cANhB,cAMVC,EANU,OAOhB,EAAK1F,SAAS,CAACmC,KAAMuD,EAAS,KAPd,SAUQjH,EAAK+G,IAAIG,IAAIC,QAVrB,OAUVC,EAVU,OAWVC,EAAkBC,EAAOC,SAASH,GAClCI,EAAW,IAAIxH,EAAK+G,IAAIU,SAC5BH,EAAOI,IACPL,GAAmBA,EAAgBM,SAGrC,EAAKpG,SAAS,CAACqG,SAAUJ,IACzB,EAAKjG,SAAS,CAACsG,SAAS,IAlBR,4CAkLF,EAxJlBC,SAwJkB,sBAxJT,sCAAAhI,EAAA,sEACO,EAAK2B,MAAMmG,SAASG,QAAQC,OAAOC,OAD1C,mBACHtD,EADG,KACmD,EAC1D,EAAKpD,SAAS,CAACoD,MACXuD,EAAI,CAAC,IAEDC,EAAI,EALL,YAKQA,EAAIxD,GALZ,wBAOLuD,EAAEE,KAAK,IAPF,UAQS,EAAK3G,MAAMmG,SAASG,QAAQM,MAAMF,EAAE,GAAGF,OARhD,WAUI,KAFLnG,EARC,gCAWHoG,EAAEC,GAAGC,KAAK,SAXP,6BAgBGE,EAAI,EAhBP,aAgBUA,GAAKxG,GAhBf,kCAkBa,EAAKL,MAAMmG,SAASG,QAAQQ,UAAUJ,EAAE,EAAEG,GAAGL,OAlB1D,QAkBCO,EAlBD,OAoBLN,EAAEC,GAAGC,KAAKI,GApBL,QAgBkBF,IAhBlB,wBAKeH,IALf,uBA2BP,EAAK5G,SAAS,CAACiD,MAAO0D,IA3Bf,4CAwJS,EAzHlBO,SAyHkB,sBAzHT,gCAAA3I,EAAA,sDAEH4B,EAAQ,GACJyG,EAAI,EAHL,YAGQA,EAAI,EAAK1G,MAAMkD,GAHvB,iCAIa,EAAKlD,MAAMmG,SAASG,QAAQW,MAAMP,EAAE,GAAGF,OAJpD,OAICO,EAJD,OAKL9G,EAAM0G,KAAKI,GALN,OAG0BL,IAH1B,uBASP,EAAK5G,SAAS,CAACG,UATR,4CAyHS,EA5GlBiH,SA4GkB,sBA5GT,gCAAA7I,EAAA,sDAEH+E,EAAQ,GACJsD,EAAI,EAHL,YAGQA,EAAI,EAAK1G,MAAMkD,GAHvB,iCAIa,EAAKlD,MAAMmG,SAASG,QAAQa,SAAST,EAAE,GAAGF,OAJvD,OAICO,EAJD,OAKL3D,EAAMuD,KAAKI,GALN,OAG0BL,IAH1B,uBASP,EAAK5G,SAAS,CAACsD,UATR,4CA4GS,EA/FlBgE,QA+FkB,sBA/FV,gCAAA/I,EAAA,sDAEF8E,EAAO,GACHuD,EAAI,EAHN,YAGSA,EAAI,EAAK1G,MAAMkD,GAHxB,iCAIc,EAAKlD,MAAMmG,SAASG,QAAQe,QAAQX,EAAE,GAAGF,OAJvD,OAIEO,EAJF,OAKJ5D,EAAKwD,KAAKI,GACVrI,QAAQC,IAAIoI,GANR,OAG2BL,IAH3B,uBAQNhI,QAAQC,IAAIwE,EAAK,IACjB,EAAKrD,SAAS,CAACqD,SATT,4CA+FU,EAlFlBmE,WAkFkB,uCAlFP,WAAM/E,GAAN,qBAAAlE,EAAA,sEAEK,EAAK2B,MAAMmG,SAASG,QAAQM,MAAMrE,GAAIiE,OAF3C,OAELnG,EAFK,OAGT3B,QAAQC,IAAI0B,GACRwB,EAAI,GACA6E,EAAI,EALH,YAKMA,EAAIrG,GALV,iCAMW,EAAKL,MAAMmG,SAASG,QAAQiB,YAAYhF,EAAGmE,EAAE,GAAGF,OAN3D,OAMDO,EANC,OAOPlF,EAAE8E,KAAKI,GACPrI,QAAQC,IAAIoI,GARL,QAKaL,IALb,uBAWT,EAAK5G,SAAS,CAAC4B,SAAUG,IAXhB,4CAkFO,wDApElBY,QAoEkB,uCApEV,WAAMF,GAAN,eAAAlE,EAAA,sEAES,EAAK2B,MAAMmG,SAASG,QAAQkB,UAAUjF,GAAIiE,OAFnD,mCAGS,EAAKxG,MAAMmG,SAASG,QAAQmB,UAAUlF,GAAIiE,OAHnD,mCAIa,EAAKxG,MAAMmG,SAASG,QAAQoB,cAAcnF,GAAIiE,OAJ3D,+BAKImB,SALJ,UAKmB,EAAK3H,MAAMmG,SAASG,QAAQsB,WAAWrF,GAAIiE,OAL9D,oDAMGmB,SANH,UAMkB,EAAK3H,MAAMmG,SAASG,QAAQW,MAAM1E,GAAIiE,OANxD,wCACFnD,EADE,CAEJnB,MAFI,KAGJnB,MAHI,KAIJoB,UAJI,KAKJJ,OALI,KAMJ9B,MANI,MASNvB,QAAQC,IAAI0E,EAAStC,OACrB,EAAKjB,SAAS,CAACuD,aAVT,4CAoEU,wDAvDlBwE,KAuDkB,sBAvDb,sBAAAxJ,EAAA,sDACH,EAAKyB,SAAS,CAACsG,SAAS,IACxB,EAAKC,WACL,EAAKW,WACL,EAAKE,WACL,EAAKE,UACL,EAAKtH,SAAS,CAACsG,SAAS,IANrB,2CAuDa,EA7ClB0B,QA6CkB,uCA7CV,WAAM5G,GAAN,SAAA7C,EAAA,sDACN,EAAKyB,SAAS,CAACsG,SAAS,IACxB,EAAKpG,MAAMmG,SAASG,QAAQyB,YAAY7G,GAAK8G,KAAK,CAACC,KAAM,EAAKjI,MAAMiC,OAAOiG,GAAG,mBAAkB,SAACC,GAC/F,EAAKrI,SAAS,CAACsG,SAAS,OAHpB,2CA6CU,wDAvClBgC,SAuCkB,uCAvCT,WAAM7F,EAAIrC,EAAMC,EAAQkI,GAAxB,eAAAhK,EAAA,6DAEP,EAAKyB,SAAS,CAACsG,SAAS,IAFjB,SAGW,EAAKpG,MAAMmG,SAASG,QAAQgC,MAAM/F,EAAI8F,GAAO7B,OAHxD,OAGDO,EAHC,OAIPrI,QAAQC,IAAIoI,GACZ,EAAK/G,MAAMmG,SAASG,QAAQ8B,SAAS7F,EAAGrC,EAAMC,EAAQkI,GAAOL,KAAK,CAACC,KAAM,EAAKjI,MAAMiC,KAAMlB,MAAO4G,SAASZ,KAAOmB,GAAG,mBAAkB,SAACC,GACvI,EAAKrI,SAAS,CAACsG,SAAS,OANjB,2CAuCS,8DA9BlBhE,QA8BkB,uCA9BV,WAAMG,EAAItC,GAAV,SAAA5B,EAAA,sDACN,EAAKyB,SAAS,CAACsG,SAAQ,IACvB,EAAKpG,MAAMmG,SAASG,QAAQiC,aAAahG,GAAIyF,KAAK,CAACC,KAAM,EAAKjI,MAAMiC,KAAMlB,MAAOd,IAAQiI,GAAG,mBAAkB,SAACC,GAC7G,EAAKrI,SAAS,CAACsG,SAAS,OAHpB,2CA8BU,0DAvBlBnF,KAuBkB,uCAvBb,WAAMsB,EAAIrB,GAAV,SAAA7C,EAAA,sDACH,EAAKyB,SAAS,CAAC0I,SAAS,IACxB,EAAKxI,MAAMmG,SAASG,QAAQmC,UAAUlG,GAAIyF,KAAK,CAACC,KAAM,EAAKjI,MAAMiC,KAAMlB,MAAOG,IAAMgH,GAAG,mBAAkB,SAACC,GAC1G,EAAKrI,SAAS,CAACsG,SAAS,OAHrB,2CAuBa,0DAjBlBsC,UAAU,SAACnG,GACT,EAAKzC,SAAS,CAACC,KAAM,EAAKC,MAAMD,MAChC,EAAKD,SAAS,CAAC6I,SAAUpG,IACzB7D,QAAQC,IAAI,EAAKqB,MAAM2I,WAcP,EAXlBjG,OAAO,WACL,EAAK5C,SAAS,CAAC6C,IAAK,EAAK3C,MAAM2C,MAUf,EAPlBL,MAAM,SAACC,GAEL,EAAKzC,SAAS,CAACgD,KAAMP,KAOrB,EAAKvC,MAAM,CACTiC,KAAM,GACNkE,SAAU,GACVC,SAAS,EACTrD,MAAO,CAAC,IACR9C,MAAO,GACPmD,MAAO,GACPD,KAAM,GACNzB,SAAU,GACV2B,SAAU,GACVH,EAAG,EACHP,IAAI,EACJG,KAAM,GAdQ,E,sEAoBR,IAAD,OAEHwB,EAAK,GAeT,OAduB,IAApBhE,KAAKN,MAAM8C,OACbwB,EACA,6BACC,kBAAC,EAAD,CAAMlC,QAAS9B,KAAK8B,QAASH,KAAQ3B,KAAKN,MAAMiC,KAAMoB,SAAW/C,KAAKN,MAAMqD,SAAUZ,QAASnC,KAAKmC,QAASf,SAAWpB,KAAKN,MAAM0B,SAAUc,QAASlC,KAAKgH,WAAYvE,MAAOzC,KAAKN,MAAM+C,MAAOlD,OAAQS,KAAKoI,UAAYjI,KAAMH,KAAK8H,SAAU1F,OAAQpC,KAAKwH,QAASnF,GAAIrC,KAAKN,MAAM2C,GAAI1C,MAAOK,KAAKN,MAAMC,MAC1SiD,EAAK5C,KAAKN,MAAMkD,EAAGE,MAAO9C,KAAKN,MAAMoD,MAAOD,KAAM7C,KAAKN,MAAMmD,KAAMlC,KAAMX,KAAKW,SAIxD,IAApBX,KAAKN,MAAM8C,OACZwB,EAAI,kBAAC,EAAD,OAEiB,IAApBhE,KAAKN,MAAM8C,OACZwB,EAAK,kBAAC,EAAD,OAEHhE,KAAKN,MAAMoG,QACN,wEAIP,yBAAK1G,UAAU,OACf,kBAAC,EAAD,CAAQuC,KAAM3B,KAAKN,MAAMiC,KAAMwB,MAAO,CAAC,kBAAI,EAAKnB,MAAM,IAAI,kBAAI,EAAKA,MAAM,IAAIhC,KAAKoC,OAAQpC,KAAKuH,QAC7F,8BACAvD,GAEA,kBAAC,EAAD,W,GApOUnD,cCCEyH,QACW,cAA7BzK,OAAO0K,SAASC,UAEe,UAA7B3K,OAAO0K,SAASC,UAEhB3K,OAAO0K,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.22519011.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fe75ba23.png\";","module.exports = __webpack_public_path__ + \"static/media/Communityicon.5d9dceeb.png\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react'\r\nimport \"./Button.css\"\r\n\r\n\r\n   const STYLES = [\r\n       'btn--primary',\r\n       'btn--outline'\r\n   ]\r\n\r\n   const SIZES = [\r\n    'btn--medium',\r\n    'btn--large',\r\n    'btn--small'\r\n]\r\n\r\n\r\n\r\nexport const MButton = ({\r\n    children,\r\n    type, \r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize,\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return (\r\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`}onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport {MButton} from \"./Button.js\"\r\n\r\nclass Main2 extends Component{\r\n  \r\n\r\n\r\n   change=()=>{\r\n      this.setState({add: !this.state.add})\r\n   }\r\n\r\n   constructor(props){\r\n      super(props)\r\n      this.state={\r\n         costs: 0,\r\n         \r\n         title: \"\",\r\n         content: \"\",\r\n         add: false,\r\n      }\r\n   }\r\n\r\n    render(){\r\n      \r\n       let cr = \"\"\r\n      \r\n       const c = <MButton buttonSize= 'btn--small' onClick={this.change}>Add/Close</MButton>\r\n       if(this.state.add){\r\n       \r\n        cr =  \r\n         <form className=\"form2\" onSubmit={(event)=>\r\n         this.props.addg(this.props.n, this.state.title, this.state.content, this.state.costs)}>\r\n        \r\n         <input\r\n         type=\"text\"\r\n         placeholder=\"Titel\"\r\n         \r\n         required\r\n         onChange={(event)=>\r\n             {this.setState({title: event.target.value})\r\n             console.log(this.state.title)}}/>\r\n         <input\r\n         type=\"text\"\r\n         placeholder=\"Content\"\r\n         required\r\n         onChange={(event)=>\r\n             this.setState({content: event.target.value})}/>\r\n         <input\r\n         type=\"number\"\r\n         placeholder=\"Kosten\"\r\n         min=\"0\"\r\n         required\r\n         onChange={(event)=>\r\n             {this.setState({costs: event.target.value})\r\n             console.log(this.state.costs)}}/>\r\n          <MButton buttonSize= 'btn--small' type=\"submit\">ADD</MButton>\r\n     </form>\r\n       }\r\n       \r\n       \r\n       return(\r\n          <div>\r\n             <MButton buttonSize= 'btn--small' onClick={()=>this.props.join(this.props.n, this.props.fee)}>Join for {this.props.fee} Ether</MButton>\r\n             {c}\r\n             {cr}\r\n          </div>\r\n         \r\n       ); \r\n    }\r\n    \r\n}\r\n\r\nexport default Main2","import React, { Component } from 'react'\r\nimport Main2 from \"./Main2.js\"\r\nimport {MButton} from \"./Button.js\"\r\n\r\nclass PPage extends Component{\r\nrender(){\r\nreturn(\r\n     <div>\r\n       \r\n        <div className=\"box\" onClick={console.log(\"i\")}>\r\n        <MButton buttonSize= 'btn--small' onClick={this.props.back}>Back</MButton>\r\n            {this.props.p.map((str2,idx2)=>\r\n            <div className=\"goal\">\r\n            <h1>{str2}</h1>\r\n             <p>{this.props.currcons[idx2]}</p>\r\n             </div>)}\r\n            <Main2 addg={this.props.addg} n={this.props.pos} fee={this.props.fee} join={this.props.join}></Main2>\r\n            \r\n            <p>{this.props.costs}</p>\r\n            \r\n            \r\n            \r\n        </div>\r\n        </div>\r\n);\r\n}\r\n\r\n}\r\n\r\nexport default PPage","import React, { Component } from 'react'\r\nimport { MButton } from './Button';\r\n\r\n\r\nclass Dashboard extends Component{\r\n    \r\n    render(){\r\n        let z = this.props.costs + this.props.data.rcosts - this.props.data.value\r\n        if(isNaN(z) || z < 0){\r\n            z = 0;\r\n        }\r\n        \r\n        return(\r\n            <div className={`box ${this.props.user == this.props.data.owner ? 'active':''}`}>\r\n            <p>Funds: <i className=\"spect\">{this.props.data.value} ETH</i></p>\r\n            <p> Free Funds: <i className=\"spect\">{this.props.data.value - this.props.data.rcosts}</i></p>\r\n            <p> Members: <i className=\"spect\">{this.props.data.usercount}</i></p>\r\n            <p>Owner: <i className=\"spect\">{this.props.data.owner}</i></p>\r\n            {this.props.user == this.props.data.owner ? <MButton onClick={()=>this.props.addslot(this.props.n+1, z )}>Add User Slot for {z} ETH</MButton>: <MButton >Nur der Planrunner kann Slots erstellen!</MButton>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\nimport Main2 from \"./Main2.js\"\r\nimport PPage from \"./PPage.js\"\r\nimport {MButton} from \"./Button.js\"\r\nimport Dashboard from \"./Dashboard.js\"\r\n\r\nclass Main extends Component{\r\n\r\n\r\n    cpage=(id)=>{\r\n        if(id !== -1){\r\n        this.props.getcons(id+1)\r\n        this.props.getdata(id+1)}\r\n        this.setState({cpage: id})\r\n        console.log(this.state.cpage)\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            cpage: -1,\r\n            fee: 0,\r\n            \r\n        }\r\n    }\r\n    render(){\r\n        \r\n        let create = \"\"\r\n        if(this.props.sc){ \r\n        create = \r\n        \r\n        <form className= \"form\" onSubmit={(event) =>{\r\n            this.props.create(this.state.fee)\r\n         }}>\r\n             <label for=\"number-input\" className=\"label-fee\">\r\n                 <span className=\"content-number\">Fees</span>\r\n                 </label>\r\n            <input\r\n            type=\"number\"\r\n            name=\"number-input\"\r\n            min= \"1\"\r\n            required\r\n            placeholder=\"\"\r\n            onChange={(event)=>\r\n            this.setState({fee: event.target.value})}/>\r\n            \r\n             <MButton className=\"cbut\" buttonSize= 'btn--small' type=\"submit\">CREATE</MButton>\r\n         </form>\r\n        }\r\n\r\n         let page = \"\"\r\n         if(this.state.cpage === -1){\r\n             page = \r\n        this.props.goals.map((str, idx)=>\r\n        \r\n        <div>\r\n        {idx < this.props.b ?\r\n        <div className=\"box\">\r\n         <MButton buttonSize= 'btn--small' onClick={()=>this.cpage(idx)}>Open</MButton>\r\n            {str.map((str2,idx2)=><h1>{str2}</h1>)}\r\n            <Main2 addg={this.props.addg} n={idx+1} fee={this.props.fees[idx]} join={this.props.join}></Main2>\r\n            \r\n            <p>{this.props.costs[idx]}</p>\r\n            \r\n            <p>{this.props.slots[idx] > 0 ? `Es sind noch ${this.props.slots[idx]} Plätze frei`: \"Es sind keine Plätze verfügbar\"} </p>\r\n            \r\n        </div>: \"\"\r\n        }</div>)\r\n        \r\n         }\r\n         else{\r\n             page = \r\n             <div>\r\n             <PPage back={()=>this.cpage(-1)} p={this.props.goals[this.state.cpage]} currcons={this.props.currcons} pos={this.state.cpage+1} costs={this.props.costs[this.state.cpage]}\r\n             join={this.props.join} addg={this.props.addg} fee = {this.props.fees[this.state.cpage]}/>\r\n             <Dashboard n={this.state.cpage} addslot={this.props.addslot} user={this.props.user} data={this.props.currdata} costs={this.props.costs[this.state.cpage]}/>\r\n             </div>\r\n         }\r\n\r\n     \r\n    return(\r\n    <div>\r\n        <h1>Plans</h1>\r\n        {create}\r\n        \r\n        {page}\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react'\r\n\r\nimport {MButton} from \"./Button.js\"\r\n\r\nclass NavBar extends Component{\r\n\r\n  handleClick=()=>{\r\n    this.setState({clicked: !this.state.clicked})\r\n  }\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      clicked: false\r\n    }\r\n  }\r\nrender(){\r\n  const MenuItems = [\r\n    {\r\n      title: \"Plans\",\r\n      id: 0,\r\n      cName: \"nav-links\"\r\n    },\r\n\r\n    {\r\n      title: \"Create\",\r\n      id: 1,\r\n      cName: \"nav-links\"\r\n    },\r\n\r\n    {\r\n      title: \"Reload\",\r\n      id: 2,\r\n      cName: \"nav-links\"\r\n    },\r\n\r\n    \r\n  ]\r\nreturn(\r\n  <nav className=\"NavBarItems\">\r\n    <h1 className=\"navbar-logo\" onClick={this.props.funcs[0]}>Startplaner</h1>\r\n    <div className=\"menu-icon\" onClick={this.handleClick}>\r\n      <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n    </div>\r\n    <ul className={this.state.clicked ? 'nav-menu active': 'nav-menu'}>\r\n      {MenuItems.map((item, idx)=>\r\n      <li key={idx}><a className={item.cName} onClick={this.props.funcs[item.id+1]}>{item.title}</a></li>)}\r\n    </ul>\r\n    \r\n  </nav>     \r\n);\r\n}\r\n\r\n}\r\n\r\nexport default NavBar","import React, { Component } from 'react'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nclass ConGroup extends Component {\r\n\r\n    render(){\r\n        let z = []\r\n        if(!this.props.id){\r\n            z = [true, false]\r\n        }\r\n        else{\r\n            z = [false, true]\r\n        }\r\n    return(\r\n        <TransitionGroup>\r\n            {this.props.cont.map((content, id)=>\r\n            <div>\r\n                \r\n            <CSSTransition key={id} timeout={500} classNames=\"transition\" in={z[id]} unmountOnExit={true}>\r\n              {content}\r\n            </CSSTransition> \r\n            </div>)}\r\n        </TransitionGroup>\r\n        \r\n    );\r\n}}\r\n\r\nexport default ConGroup","import React, { Component } from 'react'\r\nimport Logo from \"./images/logo.png\"\r\nimport LogoC from \"./images/Communityicon.png\"\r\nimport {MButton} from \"./Button.js\"\r\nimport ConGroup from './ConGroup'\r\n\r\nclass Home extends Component{\r\n\r\n\r\n    pl=()=>{\r\n        this.setState({id: !this.state.id})\r\n       \r\n    }\r\n    constructor(props){\r\n      super(props)\r\n      this.state={\r\n          \r\n         id: true\r\n      }\r\n    }\r\n\r\n    render(){\r\n\r\n        const work =\r\n       [\r\n             \r\n            <div className=\"box\" style={{borderColor: 'green'}}>\r\n            <h4 className=\"navbar-p\">\r\n              1. Create a plan\r\n            </h4>\r\n            <p className=\"navbar-p\">\r\n                In the tab Plans it is possible to activate a form by clicking at Create in the Navbar. Set up an initial fee that can\r\n                be used as a deposit, and you can create your first plan.\r\n            </p>\r\n            <h4 className=\"navbar-p\">\r\n              2. Add goals\r\n            </h4>\r\n            <p className=\"navbar-p\">\r\n                After your plan is set up, you can finally start to add goals and form it. Every goal consists out of a title, a detailed\r\n                description and a reward. Remember that when you add goals after accepting users, you may end up with high costs, because the\r\n                costs for the existing users has to be paid immediately.\r\n            </p>\r\n            <h4 className=\"navbar-p\">\r\n              3. Attract validators\r\n            </h4>\r\n            <p className=\"navbar-p\">\r\n                To make sure the safety of the blockchain won't be hindered by a centralized reward system, every plan has to provide a certain amount\r\n                of validators that evaluate the work of the members. Validators are special members that provided a very high amount of money to the plan.\r\n            </p>\r\n            <h4 className=\"navbar-p\">\r\n              4. Move something\r\n            </h4>\r\n            <p className=\"navbar-p\">\r\n                Use your little or bigger community to move something you are interested in. New technologies always provided new possibilities to\r\n                make something better than before, so use your chance.\r\n            </p>\r\n            </div>,\r\n       \r\n         \r\n            <div className=\"box\" style={{borderColor: 'red'}}>\r\n            \r\n            <h4 className=\"navbar-p\">\r\n              1. Finding a Plan\r\n            </h4>\r\n            <p className=\"navbar-p\">\r\n                In the tab \"Plans\" you can see all available plans the community has to offer. Take your time to look through as many of them\r\n                as you want to and find your most suitable plans. Remember to use the Dashboard function.\r\n            </p>\r\n            <h4 className=\"navbar-p\">\r\n              2. Joining a Plan\r\n            </h4>\r\n            <p className=\"navbar-p\">\r\n                After you have found your perfect plans, make sure that they have open slots. After dedicating a fee as a deposit that can or \r\n                cannot be retracted, you turn to an official member of the plan.\r\n            </p>\r\n            <h4 className=\"navbar-p\">\r\n              3. Work through your goals\r\n            </h4>\r\n            <p className=\"navbar-p\">\r\n                Now that you are a member of the plan, you can finally start to start your development by working through all goals. After finishing a\r\n                goal, it will be validated by special and random members. If they acknowledge your work, you'll be rewarded. You can leave\r\n                the plan at any time even if you haven't finished all goals and still get your collected reward.\r\n            </p></div>\r\n\r\n        ]\r\n\r\n       \r\n        return(\r\n            <div>\r\n            <h1 className=\"navbar-logo\" style={{color:'black', fontSize:'100px'}}>Welcome Home</h1>\r\n            <img src={Logo} style={{height: \"25vh\"}}></img>\r\n            <h2 className=\"navbar-logo\">This Is StartPlaner</h2>\r\n            <p className=\"navbar-p\">StartPlaner is a decentralized project with the goal to use digital money for real-world movements.\r\n                By allowing people to fund plans, they can motivate a great community of engaged people to support movements or\r\n                develop new skills. \r\n            </p>\r\n            <h3 className=\"navbar-logo\">Move The World With Sponsorship</h3>\r\n            <p className=\"navbar-p\">You ever wonder how to use your funds to start worldwide projects for education or conservation? StartPlaner allows you\r\n                to just use a bit of money to motivate people all across the world to participate in your plans without having to\r\n                deal with trust issues. \r\n            </p>\r\n            <h3 className=\"navbar-logo\">Let Others Sponsor Your Development</h3>\r\n            <p className=\"navbar-p\">You want to develop your personality? With StartPlaner you can find sponsors for your development. Dedicated people\r\n                are always looking for engaged people who can help them to reach their goals, so why can't you be one of them? Support \r\n                projects by solving certain tasks, get rewarded and enjoy the security a decentralized platform has to offer.\r\n            </p>\r\n            <h2 className=\"navbar-logo\">This Is How It Works</h2>\r\n            \r\n            <MButton  style={{color: 'red', margin: '10px'}} onClick={this.pl}>{this.state.id ? \"For Planrunner\" : \"For User\"}</MButton>\r\n            \r\n           \r\n           <ConGroup cont={work} id={this.state.id}/>\r\n            \r\n            <h2 className=\"navbar-logo\">Plan Our Future</h2>\r\n            <img src={LogoC} style={{height: \"15vh\"}}></img>\r\n            <p className=\"navbar-p\">StartPlaner is a young project that has a lot of space to develop. We appreciate any suggestions\r\n            from our community to plan the future of this project and finally create a tool to connect the blockchain to real-life movements.\r\n            </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport Logo from \"./images/logo.png\"\r\n\r\nclass About extends Component{\r\n\r\n    render(){\r\n        return(\r\n          <div class=\"container\">\r\n             <div class=\"item-a\">orum.</div>\r\n             <div class=\"item-b\">Contact</div>\r\n             <div class=\"item-c\">Contact</div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n          <div className=\"footerbox\">\r\n            <div className=\"Contentf\">\r\n              <h3>Contact For Supporters: <a>Link</a></h3>\r\n              <h3>Twitter: <a>Link</a></h3>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from \"react\";\nimport DailyC from \"./contracts/Daily.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Main from \"./Main.js\"\nimport NavBar from \"./NavBar.js\"\nimport Home from \"./Home.js\"\nimport About from \"./About.js\"\nimport Footer from \"./Footer\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  \n\n  componentDidMount = async () => {\n   \n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n      this.setState({user: accounts[0]})\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = DailyC.networks[networkId];\n      const instance = new web3.eth.Contract(\n        DailyC.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      \n      this.setState({contract: instance})\n      this.setState({loading: false})\n      \n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n     \n  };\n\n\n  getgoals=async()=>{\n    let b = await this.state.contract.methods.curr().call() - 1;\n    this.setState({b})\n    let L = [[]]\n     \n    for(let i = 0; i < b; i++){\n      \n      L.push([])\n      let c = await this.state.contract.methods.get_l(i+1).call();\n      //console.log(i)\n      if(c === 0){\n        L[i].push(\"Empty\")\n        break;\n      }\n     \n      \n      for(let k = 1; k <= c; k++){\n       \n      const tmp = await this.state.contract.methods.get_title(i+1,k).call();\n      //console.log(tmp)\n      L[i].push(tmp);\n      \n      }\n     //console.log(L.length)\n      \n    }\n    //console.log(L[2])\n    this.setState({goals: L})\n    \n  }\n\n  getcosts=async()=>{\n    \n    let costs = []\n    for(let i = 0; i < this.state.b; i++){\n      const tmp = await this.state.contract.methods.get_c(i+1).call()\n      costs.push(tmp)\n      //console.log(tmp)\n    }\n    //console.log(costs[0])\n    this.setState({costs})\n    \n  }\n\n  getslots=async()=>{\n    \n    let slots = []\n    for(let i = 0; i < this.state.b; i++){\n      const tmp = await this.state.contract.methods.get_left(i+1).call()\n      slots.push(tmp)\n      //console.log(tmp)\n    }\n    //console.log(costs[0])\n    this.setState({slots})\n    \n  }\n\n  getfees=async()=>{\n    \n    let fees = []\n    for(let i = 0; i < this.state.b; i++){\n      const tmp = await this.state.contract.methods.get_fee(i+1).call()\n      fees.push(tmp)\n      console.log(tmp)\n    }\n    console.log(fees[0])\n    this.setState({fees})\n    \n  }\n\n  getcontent=async(id)=>{\n\n    let c = await this.state.contract.methods.get_l(id).call()\n    console.log(c)\n    let z = []\n    for(let i = 0; i < c; i++){\n      const tmp = await this.state.contract.methods.get_content(id,i+1).call()\n      z.push(tmp)\n      console.log(tmp)\n    }\n\n    this.setState({currcons: z})\n  }\n\n  getdata=async(id)=>{\n    let currdata = {\n      owner: await this.state.contract.methods.get_owner(id).call(),\n      value: await this.state.contract.methods.get_value(id).call(),\n      usercount: await this.state.contract.methods.get_usercount(id).call(),\n      rcosts: parseInt(await this.state.contract.methods.get_rcosts(id).call()),\n      costs: parseInt(await this.state.contract.methods.get_c(id).call())\n    }\n\n    console.log(currdata.value)\n    this.setState({currdata})\n  }\n\n  load=async()=>{\n    this.setState({loading: true})\n    this.getgoals()\n    this.getcosts()\n    this.getslots()\n    this.getfees()\n    this.setState({loading: false})\n  }\n\n  \n  addplan=async(fee)=>{\n    this.setState({loading: true})\n    this.state.contract.methods.create_plan(fee).send({from: this.state.user}).on('transactionHash',(hash)=> {\n      this.setState({loading: false})})\n   \n  }\n  add_goal=async(id, title,content,price)=>{\n    \n    this.setState({loading: true})\n    const tmp = await this.state.contract.methods.get_f(id, price).call()\n    console.log(tmp)\n    this.state.contract.methods.add_goal(id,title,content,price).send({from: this.state.user, value: parseInt(tmp)}).on('transactionHash',(hash)=> {\n    this.setState({loading: false})})\n  }\n\n  addslot=async(id, costs)=>{\n    this.setState({loading:true})\n    this.state.contract.methods.add_userslot(id).send({from: this.state.user, value: costs}).on('transactionHash',(hash)=> {\n      this.setState({loading: false})})\n\n  }\n\n  join=async(id, fee)=>{\n    this.setState({laoding: true})\n    this.state.contract.methods.join_plan(id).send({from: this.state.user, value: fee}).on('transactionHash',(hash)=> {\n    this.setState({loading: false})})\n  }\n\n  changeadd=(id)=>{\n    this.setState({add: !this.state.add})\n    this.setState({currplan: id})\n    console.log(this.state.currplan)\n  }\n  \n  create=()=>{\n    this.setState({sc: !this.state.sc})\n  }\n\n  cpage=(id)=>{\n    \n    this.setState({page: id})\n  }\n\n  \n\n  constructor(props){\n    super(props)\n    this.state={\n      user: \"\",\n      contract: {},\n      loading: true,\n      goals: [[]],\n      costs: [],\n      slots: [],\n      fees: [],\n      currcons: [],\n      currdata: {},\n      b: 0,\n      sc: true,\n      page: 0\n    }\n  }\n\n \n\n  render() {\n\n    let pl = \"\"\n    if(this.state.page === 0){\n     pl = \n     <div>\n      <Main addslot={this.addslot} user = {this.state.user} currdata= {this.state.currdata} getdata={this.getdata} currcons= {this.state.currcons} getcons={this.getcontent} goals={this.state.goals} change={this.changeadd}  addg={this.add_goal} create={this.addplan} sc={this.state.sc} costs={this.state.costs}\n     b = {this.state.b} slots={this.state.slots} fees={this.state.fees} join={this.join}/>\n    \n     </div>\n    }\n    if(this.state.page === 1){\n      pl= <Home/>\n    }\n    if(this.state.page === 2){\n      pl = <About/>\n    }\n    if (this.state.loading) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n\n    return (\n      <div className=\"App\">\n      <NavBar user={this.state.user} funcs={[()=>this.cpage(1), ()=>this.cpage(0), this.create, this.load]}/>\n        <body>\n       {pl}\n        </body>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}